#!/bin/bash

set -e

SOC=a64
MACH=sun50iw1p1
PLATFORM=
BOARD=
kconfig=
TOPDIR=`pwd`
TARGET_PRODUCT=

CUR_DIR=$PWD

list_boards() {
	(cd sunxi-pack/allwinner/${MACH}/configs ; ls -1d BPI* )
}

# keep the output `sh` friendly
# i.e., no spaces around the '='
generate_board_mk() {
	
	cat <<-EOT
	BOARD=$BOARD
	SOC=$SOC
	MACH=$MACH
	UBOOT_CONFIG=$MACH
	KERNEL_CONFIG=sun50iw1p1smp_${kconfig}_defconfig
	TARGET_PRODUCT=${kconfig}
	EOT

}


generate_board_envsh() {
	
	cat <<-EOT
	#export ARCH=arm64
	export BOARD=$BOARD
	export SOC=$SOC
	export MACH=$MACH
	export CROSS_COMPILE=arm-linux-gnueabihf-
	export UBOOT_CONFIG=${MACH}_config
	export KERNEL_CONFIG=sun50iw1p1smp_${kconfig}_defconfig
	export LICHEE_PLATFORM="linux"
	export GPU_TYPE="mali400"
	export TOPDIR=${TOPDIR}
	export TARGET_PRODUCT=${kconfig}
	EOT

}

usage() {
	cat <<-EOT >&2
	Usage: $0 <board>

	supported boards:
	EOT
	list_boards  #DK, update later
}

if [ $# -eq 0 ]; then
	usage
	exit 1
fi

BOARD=$1

if [[ $BOARD =~ "BPI-M64" ]]
then
	kconfig="bpi-m64"
else
	kconfig=$(echo $BOARD | tr '[A-Z]' '[a-z]')
fi

generate_board_envsh "$1" > env.sh

out=chosen_board.mk
if generate_board_mk "$1" > $out~; then
	mv $out~ $out
	echo "$1 configured. Now run \`make\`"
else
	rm $out~
	exit 1
fi
